// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TShop.Api.EF;

#nullable disable

namespace TShop.Api.Migrations
{
    [DbContext(typeof(TShopDbContext))]
    partial class TShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TShop.Api.Models.AppConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppConfigs");
                });

            modelBuilder.Entity("TShop.Api.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Sexy Forever",
                            Status = 0,
                            Summary = "Sexy Forever",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Trumph",
                            Status = 0,
                            Summary = "Trumph",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "iBasic",
                            Status = 0,
                            Summary = "iBasic",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Uniqlo",
                            Status = 0,
                            Summary = "Uniqlo",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Zara",
                            Status = 0,
                            Summary = "Zara",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Gucci",
                            Status = 0,
                            Summary = "Gucci",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Hermes",
                            Status = 0,
                            Summary = "Hermes",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Louis Vuiton",
                            Status = 0,
                            Summary = "Louis Vuiton",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Chanel",
                            Status = 0,
                            Summary = "Chanel",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153),
                            Name = "Dior",
                            Status = 0,
                            Summary = "Dior",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8153)
                        });
                });

            modelBuilder.Entity("TShop.Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827),
                            Description = "",
                            Name = "Thời trang nam",
                            SeoUrl = "thoi-trang-nam",
                            Status = 0,
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827),
                            Description = "",
                            Name = "Thời trang nữ",
                            SeoUrl = "thoi-trang-nu",
                            Status = 0,
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827),
                            Description = "",
                            Name = "Nội y nam",
                            SeoUrl = "noi-y-nam",
                            Status = 0,
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827),
                            Description = "",
                            Name = "Nội y nữ",
                            SeoUrl = "noi-y-nu",
                            Status = 0,
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827),
                            Description = "",
                            Name = "Trang sức",
                            SeoUrl = "trang-suc",
                            Status = 0,
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827),
                            Description = "",
                            Name = "Phụ kiện",
                            SeoUrl = "phu-kien",
                            Status = 0,
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(7827)
                        });
                });

            modelBuilder.Entity("TShop.Api.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("ParentCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(2);

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("TShop.Api.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("TShop.Api.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TShop.Api.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails", (string)null);
                });

            modelBuilder.Entity("TShop.Api.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFavoriteProduct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFeaturedProduct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNewProduct")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("numeric");

                    b.Property<string>("SeoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Viewed")
                        .HasColumnType("integer");

                    b.Property<int>("Warranty")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TShop.Api.Models.ProductImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages", (string)null);
                });

            modelBuilder.Entity("TShop.Api.Models.ProductTag", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags", (string)null);
                });

            modelBuilder.Entity("TShop.Api.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "quan-ao",
                            Status = 0,
                            Title = "Quần áo",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "noi-y",
                            Status = 0,
                            Title = "Nội y",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "trang-suc",
                            Status = 0,
                            Title = "Trang sức",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "phu-kien",
                            Status = 0,
                            Title = "Phụ kiện",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "ao-lot",
                            Status = 0,
                            Title = "Áo lót",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "quan-lot",
                            Status = 0,
                            Title = "Quần lót",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "ao-thun",
                            Status = 0,
                            Title = "Áo thun",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "quan-kaki",
                            Status = 0,
                            Title = "Quần kaki",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "quan-jean",
                            Status = 0,
                            Title = "Quần jean",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "Tam Nguyen",
                            CreatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184),
                            Slug = "ao-khoac",
                            Status = 0,
                            Title = "Áo khoác",
                            UpdatedBy = "Tam Nguyen",
                            UpdatedDate = new DateTime(2022, 11, 30, 6, 0, 39, 76, DateTimeKind.Utc).AddTicks(8184)
                        });
                });

            modelBuilder.Entity("TShop.Api.Models.Comment", b =>
                {
                    b.HasOne("TShop.Api.Models.Comment", "ParentComment")
                        .WithMany()
                        .HasForeignKey("ParentCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TShop.Api.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentComment");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TShop.Api.Models.OrderDetail", b =>
                {
                    b.HasOne("TShop.Api.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TShop.Api.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TShop.Api.Models.Product", b =>
                {
                    b.HasOne("TShop.Api.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TShop.Api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TShop.Api.Models.ProductImages", b =>
                {
                    b.HasOne("TShop.Api.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TShop.Api.Models.ProductTag", b =>
                {
                    b.HasOne("TShop.Api.Models.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TShop.Api.Models.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("TShop.Api.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TShop.Api.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TShop.Api.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("TShop.Api.Models.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("TShop.Api.Models.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });
#pragma warning restore 612, 618
        }
    }
}
